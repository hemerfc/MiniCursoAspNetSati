@model IEnumerable<WebApplication.Models.Task>

@{
    ViewBag.Title = "Tasks";
}

@section styles{
    <style type="text/css">
        .inputTask {
            border: none;
        }
    </style>
}

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".DoneBtn").click(function () {
                var taskChk = $(this);
                var id = taskChk.parent().data("id");
                //var name = taskChk.parent().find("input[type=text]").val();
                var name = taskChk.parent().find(".inputTask").val();
                var done = taskChk.attr("checked") == "checked";

                Update(id, name, done, function () {
                    if (taskChk.attr("checked") == "checked")
                        taskChk.removeAttr("checked");
                    else
                        taskChk.attr("checked", "checked");

                    $("#Name").focus();
                });

                $.get(("http://localhost:49274/Todo/ChangeState/" + taskChk.parent().data("id")), function (data, textstatus, jqXHR) {
                    if (jqXHR.status = 200) {

                    }

                    /// TODO: ERRO
                });
            });

            $(".DeleteBtn").click(function () {
                var btn = $(this);

                DeleteTask(btn.parent().data("id"), btn.parent());
            });

            $("#taskList").on('blur', '.inputTask', null, function () {
                var input = $(this);
                var id = input.parent().data("id");
                var name = input.val();
                var done = input.parent().find("input[type=checkbox]").attr("checked") == "checked";

                if (typeof name === "undefined" || name == "") {
                    DeleteTask(id, input.parent());
                } else {
                    Update(id, name, done, function () {
                        $("#Name").focus();
                    });
                }
            });

            $("#Name").focus();

            // SIGNALR
            // Referencia o hub do signalr
            var tasksHub = $.connection.tasksHub;
            // a mensagem de broadcast
            tasksHub.client.newtask = function (task) {
                console.log(task);
            };

            // Inicia a conexao
            $.connection.hub.start().done(function () {
                // chat.server.newtask($('#displayname').val(), $('#message').val());
            });
        });

        function DeleteTask(id, element) {
            $.get(("http://localhost:49274/Todo/Delete/" + id), function (data, textstatus, jqXHR) {
                if (jqXHR.status = 200) {
                    element.remove();
                    $("#Name").focus();
                }
                else {
                    alert("Erro" + jqXHR.status);
                }
            });
        }

        function Update(id, name, done, callback) {
            $.post(("http://localhost:49274/Todo/Edit"), { id: id, name: name, done: done }, function (data, textstatus, jqXHR) {
                if (jqXHR.status = 200) {
                    if (typeof callback === "undefined")
                        callback();
                } else {
                    alert("Erro" + jqXHR.status);
                }
            });

        }
    </script>
}

<h2>@(ViewBag.Title)</h2>

<ul id="taskList">
    @foreach (var item in Model)
    {
        <li data-id="@item.Id">
            @Html.CheckBox("Done", item.Done, new { @class = "DoneBtn" })
            @Html.TextBox("Task", item.Name, new { @class = (item.Done ? "stroke inputTask" : " inputTask") })
            <a class="DeleteBtn" href="#">X</a>
        </li>
    }

    @using (Html.BeginForm("Create", "Todo", FormMethod.Post))
    {
        <li>
            @Html.Editor("Name")
            <input type="submit" value="Create task" />
        </li>
    }
</ul>